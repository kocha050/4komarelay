[{"/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/index.tsx":"1","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/reportWebVitals.ts":"2","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/App.tsx":"3","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Login.tsx":"4","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Home.tsx":"5","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Registration.tsx":"6","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Navbar.tsx":"7","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Scroll.tsx":"8","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Post.tsx":"9"},{"size":517,"mtime":1606817256000,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1606817256000,"results":"12","hashOfConfig":"11"},{"size":573,"mtime":1610467163963,"results":"13","hashOfConfig":"11"},{"size":3476,"mtime":1610467060593,"results":"14","hashOfConfig":"11"},{"size":499,"mtime":1610467018745,"results":"15","hashOfConfig":"11"},{"size":3561,"mtime":1610459651844,"results":"16","hashOfConfig":"11"},{"size":4965,"mtime":1610467014721,"results":"17","hashOfConfig":"11"},{"size":2630,"mtime":1610459651844,"results":"18","hashOfConfig":"11"},{"size":6641,"mtime":1610711722915,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8z0sjz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/index.tsx",[],["43","44"],"/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/reportWebVitals.ts",[],"/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/App.tsx",[],"/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Login.tsx",["45"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Grid, Button, TextField, Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      backgroundColor: \"#FFB549\",\n      color: \"#FFFFFF\",\n      borderLeftColor: \"#FFB549\",\n      marginBottom: \"8px\",\n      margin: theme.spacing(2),\n      width: \"40ch\",\n      \"&:hover\": {\n        backgroundColor: \"#FFF\",\n        color: \"#FFB549\",\n      },\n    },\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"40ch\",\n      },\n    },\n  })\n);\n\nconst Login = (props: any) => {\n  const classes = useStyles();\n\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(false);\n\n  const getAuthentication = async () => {\n    console.log(userEmail);\n    console.log(userPassword);\n\n    const url =\n      \"http://localhost:3000/api/method/login?uid=\" +\n      userEmail +\n      \"&pwd=\" +\n      userPassword;\n    // 入力したidとパスワードをapiに送信\n    const boolean = await fetch(url)\n    const res = await fetch(url)\n      .then((res) => {\n        console.log(\"通信に成功しました\");\n        return res.json();\n      })\n      .catch((error) => {\n        console.error(\"通信に失敗しました\", error);\n        return null;\n      });\n\n    console.log(res);\n    if (res) {\n      //console.log(\"true\");\n      console.log(isLogin);\n      setIsLogin(true);\n      console.log(isLogin);\n      handleToHomePage();\n    } else {\n      console.log(\"false\");\n    }\n\n    return true;\n  };\n  //trueの時ページ遷移\n  const handleToHomePage = () => {\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Container maxWidth=\"xs\">\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\n          <h1>ログイン</h1>\n        </Grid>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-required\"\n                label=\"id(メールアドレス)\"\n                defaultValue=\"\"\n                variant=\"outlined\"\n                onChange={(id) => setUserEmail(id.target.value)}\n              />\n            </div>\n            <div>\n              {\" \"}\n              <TextField\n                id=\"outlined-password-input\"\n                label=\"パスワード\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                onChange={(pass) => setUserPassword(pass.target.value)}\n              />\n            </div>\n          </form>\n        </Grid>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <div>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={() => getAuthentication()}\n            >\n              ログイン\n            </Button>\n          </div>\n        </Grid>\n        <Grid container spacing={4} alignItems=\"center\" justify=\"center\">\n          <p>\n            <Link to=\"/Registration\">アカウントをお持ちでない方はこちら</Link>\n          </p>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\nexport default Login;\n","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Home.tsx",["46","47","48","49","50"],"import classes from \"*.module.css\";\nimport { Grid, Button, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport Scroll from \"./Scroll\";\n\n///\nimport ScrollCompornent from \"./ScrollComponent\";\n///\n\nconst Home = () => {\n  return (\n    <div>\n      <div>     \n        <Navbar />\n        <Scroll/>\n        <p>\n          <Link to=\"/login\">Login</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Registration.tsx",["51"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Grid, Button, TextField, Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      backgroundColor: \"#FFB549\",\n      color: \"#FFFFFF\",\n      borderLeftColor: \"#FFB549\",\n      marginBottom: \"8px\",\n      margin: theme.spacing(2),\n      width: \"40ch\",\n      \"&:hover\": {\n        backgroundColor: \"#FFF\",\n        color: \"#FFB549\",\n      },\n    },\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"40ch\",\n      },\n    },\n  })\n);\n\nconst Registration = (props: any) => {\n  const classes = useStyles();\n\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n const [isLogin, setIsLogin] = useState(false);\n\n  const getAuthentication = async () => {\n    console.log(userEmail);\n    console.log(userPassword);\n\n    const data = { uid: userEmail, pwd: userPassword };\n\n    const param = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n\n      // リクエストボディ\n      body: JSON.stringify(data),\n    };\n\n    const url = \"http://localhost:3000/api/method/\";\n    // 入力したidとパスワードをapiに送信\n    const res = await fetch(url, param)\n      .then((res) => {\n        console.log(\"通信に成功しました\");\n        return res.json();\n      })\n      .catch((error) => {\n        console.error(\"通信に失敗しました\", error);\n        return null;\n      });\n\n    if (res) {\n      //console.log(\"true\");\n      setIsLogin(true);\n      handleToHomePage();\n    } else {\n      console.log(\"false\");\n    }\n\n    return true;\n  };\n  //trueの時ページ遷移\n  const handleToHomePage = () => {\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Container maxWidth=\"xs\">\n        <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\n          <h1>会員登録</h1>\n        </Grid>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                id=\"outlined-required\"\n                label=\"id(メールアドレス)\"\n                defaultValue=\"\"\n                variant=\"outlined\"\n                onChange={(id) => setUserEmail(id.target.value)}\n              />\n            </div>\n            <div>\n              {\" \"}\n              <TextField\n                id=\"outlined-password-input\"\n                label=\"パスワード\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                onChange={(pass) => setUserPassword(pass.target.value)}\n              />\n            </div>\n          </form>\n        </Grid>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <div>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={() => getAuthentication()}\n            >\n              　登録する\n            </Button>\n          </div>\n        </Grid>\n        <Grid container spacing={4} alignItems=\"center\" justify=\"center\">\n          <p>\n            <Link to=\"/Login\">アカウントをお持ちの方はこちら</Link>\n          </p>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\nexport default Registration;\n","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Navbar.tsx",["52"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  Button,\n  // TextField,\n  Container,\n  AppBar,\n  Toolbar,\n  InputBase,\n  IconButton,\n  fade,\n  Typography,\n  Menu,\n  MenuItem,\n  Box,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    toolBar: {\n      backgroundColor: \"#FFB549\",\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 3,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    koumoku: {\n      color: \"#FFF\",\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    //ここから検索フォームのcss\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\",\n        },\n      },\n    },\n  })\n);\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  //ドロップダウンメニュー\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  }; //ドロップダウンを選択したとき\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.toolBar} position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.title}>\n            ４コマリレー\n          </Typography>\n          <Typography variant=\"h6\" className={classes.koumoku}>\n\n          </Typography>\n          <div>\n            <Typography\n              variant=\"h6\"\n              className={classes.koumoku}\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              完成作品\n            </Typography>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose}>\n                {\" \"}\n                <Link to=\"/login\">全て</Link>\n              </MenuItem>\n              <MenuItem onClick={handleClose}>アクション</MenuItem>\n              <MenuItem onClick={handleClose}>ギャグ</MenuItem>\n            </Menu>\n          </div>\n\n          <Typography variant=\"h6\" className={classes.koumoku}>\n            未完成作品\n          </Typography>\n          \n\n\n          \n\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"検索\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n      \n        </Toolbar>\n      </AppBar>\n      <br></br>\n      <Container maxWidth=\"sm\" background-color=\"secondary\">\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n          </Grid>\n          <Grid item xs={3}>\n            <Link to=\"/login\"><Button variant=\"contained\" color=\"default\" >ログアウト</Button></Link>\n          </Grid>\n          <Grid item xs={3}>\n            <Link to=\"/login\"><Button variant=\"contained\" color=\"secondary\" >　退　会　</Button></Link>\n          </Grid>\n          <Grid item xs={3}>\n          </Grid>\n        </Grid>\n      </Container>\n      <br></br>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Scroll.tsx",[],"/Users/kotaniryota/Documents/GitHub/4komarelay/react-ts-app/src/componet/Post.tsx",["53","54","55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":46,"column":11,"nodeType":"65","messageId":"66","endLine":46,"endColumn":18},{"ruleId":"63","severity":1,"message":"67","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":15},{"ruleId":"63","severity":1,"message":"68","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"69","line":2,"column":16,"nodeType":"65","messageId":"66","endLine":2,"endColumn":22},{"ruleId":"63","severity":1,"message":"70","line":2,"column":24,"nodeType":"65","messageId":"66","endLine":2,"endColumn":29},{"ruleId":"63","severity":1,"message":"71","line":9,"column":8,"nodeType":"65","messageId":"66","endLine":9,"endColumn":24},{"ruleId":"63","severity":1,"message":"72","line":34,"column":9,"nodeType":"65","messageId":"66","endLine":34,"endColumn":16},{"ruleId":"63","severity":1,"message":"73","line":17,"column":3,"nodeType":"65","messageId":"66","endLine":17,"endColumn":6},{"ruleId":"63","severity":1,"message":"67","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":15},{"ruleId":"63","severity":1,"message":"70","line":2,"column":24,"nodeType":"65","messageId":"66","endLine":2,"endColumn":29},{"ruleId":"63","severity":1,"message":"74","line":2,"column":94,"nodeType":"65","messageId":"66","endLine":2,"endColumn":104},{"ruleId":"63","severity":1,"message":"75","line":3,"column":23,"nodeType":"65","messageId":"66","endLine":3,"endColumn":45},{"ruleId":"63","severity":1,"message":"76","line":3,"column":47,"nodeType":"65","messageId":"66","endLine":3,"endColumn":58},{"ruleId":"63","severity":1,"message":"77","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":14},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'boolean' is assigned a value but never used.","Identifier","unusedVar","'classes' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'ScrollCompornent' is defined but never used.","'isLogin' is assigned a value but never used.","'Box' is defined but never used.","'IconButton' is defined but never used.","'ContactSupportOutlined' is defined but never used.","'PhotoCamera' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]